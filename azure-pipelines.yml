# ASP.NET Core

# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  vmImage: ubuntu-latest

variables:
  buildConfiguration: 'Release'

resources:
  containers:
  - container: mongo
    image: mongo
    ports:
    - 27017:27017

services:
  mongo: mongo

steps:
- task: UseDotNet@2
  displayName: 'Install .NET Core SDK 6'
  inputs:
    version: '6.0.x'

- task: NuGetCommand@2
  inputs:
    command: 'restore'
    restoreSolution: '**/*.sln'
    feedsToUse: 'select'
    vstsFeed: 'ac9ef43d-5e52-40a8-a3ae-09d4d3dd8a78'

- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: '**/Grand.Web.csproj'
    arguments: '--configuration $(buildConfiguration)'
  displayName: 'dotnet build $(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'dotnet test'
  inputs:
    command: 'test'
    arguments: '--configuration $(buildConfiguration) --collect:"XPlat Code Coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=cobertura'
    publishTestResults: true
    projects: '**/Tests/**/*.csproj'

- task: DotNetCoreCLI@2
  displayName: 'Install ReportGenerator'
  inputs:
    command: custom
    custom: tool
    arguments: 'install --global dotnet-reportgenerator-globaltool --version 4.8.12'

- script: reportgenerator "-reports:$(Build.SourcesDirectory)/build_reports/**/coverage.cobertura.xml"" -targetdir:$(Build.SourcesDirectory)/build_reports/code_coverage" -reporttypes:HtmlInline_AzurePipelines;Cobertura
  displayName: Merge code coverage files
